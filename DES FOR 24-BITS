#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
static const int IP[] = { 58, 50, 42, 34, 26, 18, 10, 2,
                           60, 52, 44, 36, 28, 20, 12, 4,
                           62, 54, 46, 38, 30, 22, 14, 6,
                           64, 56, 48, 40, 32, 24, 16, 8,
                           57, 49, 41, 33, 25, 17, 9, 1,
                           59, 51, 43, 35, 27, 19, 11, 3,
                           61, 53, 45, 37, 29, 21, 13, 5,
                           63, 55, 47, 39, 31, 23, 15, 7 };
static const int FP[] = { 40, 8, 48, 16, 56, 24, 64, 32,
                           39, 7, 47, 15, 55, 23, 63, 31,
                           38, 6, 46, 14, 54, 22, 62, 30,
                           37, 5, 45, 13, 53, 21, 61, 29,
                           36, 4, 44, 12, 52, 20, 60, 28,
                           35, 3, 43, 11, 51, 19, 59, 27,
                           34, 2, 42, 10, 50, 18, 58, 26,
                           33, 1, 41, 9, 49, 17, 57, 25 };
static const int E[] = { 32, 1, 2, 3, 4, 5,
                         4, 5, 6, 7, 8, 9,
                         8, 9, 10, 11, 12, 13,
                         12, 13, 14, 15, 16, 17,
                         16, 17, 18, 19, 20, 21,
                         20, 21, 22, 23, 24, 25,
                         24, 25, 26, 27, 28, 29,
                         28, 29, 30, 31, 32, 1 };
static const int PC2[] = { 14, 17, 11, 24, 1, 5,
                           3, 28, 15, 6, 21, 10,
                           23, 19, 12, 4, 26, 8,
                           16, 7, 27, 20, 13, 2,
                           41, 52, 31, 37, 47, 55,
                           30, 40, 51, 45, 33, 48,
                           44, 49, 39, 56, 34, 53,
                           46, 42, 50, 36, 29, 32 };

static const int rounds = 16;
typedef struct {
    uint64_t left;
    uint64_t right;
} SubkeySubset;
void generateSubkeys(const uint64_t key, SubkeySubset subkeys[rounds]) {
    uint64_t permuted_key = 0;
    for (int i = 0; i < 56; ++i) {
        permuted_key <<= 1;
        permuted_key |= (key >> (64 - PC2[i])) & 0x01;
    }
    uint32_t left_subset = permuted_key >> 28;
    uint32_t right_subset = permuted_key & 0x0FFFFFFF;
    for (int i = 0; i < rounds; ++i) {
        left_subset = ((left_subset << 1) | (left_subset >> 27)) & 0x0FFFFFFF;
        right_subset = ((right_subset << 1) | (right_subset >> 27)) & 0x0FFFFFFF;
        uint64_t merged_key = (((uint64_t)left_subset) << 28) | right_subset;
        uint64_t subkey = 0;
        for (int j = 0; j < 48; ++j) {
            subkey <<= 1;
            subkey |= (merged_key >> (56 - PC2[j])) & 0x01;
        }
        subkeys[i].left = subkey >> 24;
        subkeys[i].right = subkey & 0x00FFFFFF;
    }
}
int main() {
    uint64_t key = 0x133457799BBCDFF1;
    SubkeySubset subkeys[rounds];
    generateSubkeys(key, subkeys);
    printf("Subkeys:\n");
    for (int i = 0; i < rounds; ++i) {
        printf("Round %d: 0x%06X%06X\n", i + 1, (uint32_t)subkeys[i].left, (uint32_t)subkeys[i].right);
    }
    return 0;
}
1 comment on commit a9a1425

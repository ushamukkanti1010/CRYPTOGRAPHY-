#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <openssl/des.h>

#define BLOCK_SIZE 8

void encrypt_block(DES_cblock *input, DES_key_schedule *ks, DES_cblock *ivec) {
    DES_ecb3_encrypt(input, input, ks, ks+1, ks+2, DES_ENCRYPT);
    DES_cbc_encrypt(input, input, BLOCK_SIZE, ks+2, ivec, DES_ENCRYPT);
}

void encrypt_cbc(const unsigned char *plaintext, int plaintext_len, const unsigned char *key, const unsigned char *iv, unsigned char *ciphertext) {
    DES_key_schedule ks1, ks2, ks3;
    DES_set_key((const_DES_cblock *)key, &ks1);
    DES_set_key((const_DES_cblock *)(key+8), &ks2);
    DES_set_key((const_DES_cblock *)(key+16), &ks3);

    DES_cblock ivec;
    memcpy(&ivec, iv, sizeof(DES_cblock));

    int num_blocks = (plaintext_len + BLOCK_SIZE - 1) / BLOCK_SIZE;
    int last_block_len = plaintext_len % BLOCK_SIZE;

    for (int i = 0; i < num_blocks; i++) {
        DES_cblock input_block;
        memset(&input_block, 0, sizeof(DES_cblock));
        memcpy(&input_block, plaintext + i * BLOCK_SIZE, (i == num_blocks - 1) ? last_block_len : BLOCK_SIZE);

        encrypt_block(&input_block, &ks1, &ivec);

        memcpy(ciphertext + i * BLOCK_SIZE, &input_block, BLOCK_SIZE);
    }
}

int main() {
    unsigned char key[24] = "123456789012345678901234";
    unsigned char iv[8] = "12345678";
    const char *plaintext = "Hello, world!";
    int plaintext_len = strlen(plaintext);
    unsigned char ciphertext[256];

    encrypt_cbc((const unsigned char *)plaintext, plaintext_len, key, iv, ciphertext);

    printf("Plaintext: %s\n", plaintext);
    printf("Ciphertext: ");
    for (int i = 0; i < plaintext_len; i++)
        printf("%02x", ciphertext[i]);
    printf("\n");

    return 0;
}

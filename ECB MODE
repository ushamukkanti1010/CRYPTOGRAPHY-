#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <openssl/des.h>

#define BLOCK_SIZE 8

void encrypt_block(const unsigned char *input, const unsigned char *key, unsigned char *output) {
    DES_key_schedule ks;
    DES_set_key((const_DES_cblock *)key, &ks);
    DES_ecb_encrypt((const_DES_cblock *)input, (DES_cblock *)output, &ks, DES_ENCRYPT);
}

void decrypt_block(const unsigned char *input, const unsigned char *key, unsigned char *output) {
    DES_key_schedule ks;
    DES_set_key((const_DES_cblock *)key, &ks);
    DES_ecb_encrypt((const_DES_cblock *)input, (DES_cblock *)output, &ks, DES_DECRYPT);
}

void encrypt_ecb(const unsigned char *plaintext, int plaintext_len, const unsigned char *key, unsigned char *ciphertext) {
    int num_blocks = (plaintext_len + BLOCK_SIZE - 1) / BLOCK_SIZE;

    for (int i = 0; i < num_blocks; i++) {
        encrypt_block(plaintext + i * BLOCK_SIZE, key, ciphertext + i * BLOCK_SIZE);
    }
}

void decrypt_ecb(const unsigned char *ciphertext, int ciphertext_len, const unsigned char *key, unsigned char *plaintext) {
    int num_blocks = ciphertext_len / BLOCK_SIZE;

    for (int i = 0; i < num_blocks; i++) {
        decrypt_block(ciphertext + i * BLOCK_SIZE, key, plaintext + i * BLOCK_SIZE);
    }
}

int main() {
    unsigned char key[8] = "12345678";
    const char *plaintext = "Hello, world!";
    int plaintext_len = strlen(plaintext);
    unsigned char ciphertext[256];
    unsigned char decryptedtext[256];

    encrypt_ecb((const unsigned char *)plaintext, plaintext_len, key, ciphertext);

    printf("Plaintext: %s\n", plaintext);
    printf("Ciphertext: ");
    for (int i = 0; i < plaintext_len; i++)
        printf("%02x", ciphertext[i]);
    printf("\n");

    decrypt_ecb(ciphertext, plaintext_len, key, decryptedtext);
    decryptedtext[plaintext_len] = '\0';
    printf("Decrypted text: %s\n", decryptedtext);

    return 0;
}
1 comment on commit 63e367f
@hemaviswaraju
